###Output my data set###
#Huihan Zhang

# Load and install packages, note the new packages
installation_needed  <- TRUE
loading_needed <- TRUE
package_list <- c('foreign', 'xtable', 'plm','gmm', 'AER','stargazer','readstata13', 'ggplot2',
                  'boot', 'arm', 'lmtest', 'sem', 'bdynsys', 'ivpack', 'mfx', 'glm2','plyr')
if(installation_needed){install.packages(package_list, repos='http://cran.us.r-project.org')}
if(loading_needed){lapply(package_list, require, character.only = TRUE)}

# clear the global workspace
rm(list=ls())

# set working directory (only works on my computer)
# uncomment this before running the codes
setwd("/Users/apple/Documents/LSE 3RD YEAR/EC331/data/MasterData")

# load raw data -- Chinese Household Income Project urban survey 2002
# downloaded from "https://www.icpsr.umich.edu/icpsrweb/ICPSR/series/243"
mydata <- read.dta13("/Users/apple/Documents/LSE 3RD YEAR/EC331/data/Raw Data.dta") 

# select variables of interest
mydata <- mydata[c("CITY","PCODE","CODE_P","P103","P104","P105","P106","P108","P113","PROVINCE")]

# rename variables 
mydata <- rename(mydata, c("PCODE"="HHID","CODE_P"="INDID","P103"="relationship", "P104"="hukou", "P105"="female", "P106"="age", "P108"="ethnicity", "P113"="schooling"))

# I'm going to restrict my data to age >= 22, so that most of them have completed university education
mydata <- mydata[mydata$age >= 22,]

# recode categorical variables to numeric factors
mydata$female <- ifelse(mydata$female == "male", 0, ifelse(mydata$female == "female", 1, NA))
#mydata$hukou <- ifelse(mydata$hukou == "Urban Hukou of the resident city (county)", 0, ifelse(mydata$hukou == "Rural Hukou of other city (or county)", 1, NA))
mydata$minority <- as.numeric(mydata$minority == 2)


# I generate a bunch of helper variables for the purpose of re-formatting my data set to be regression-friendly.
# Some of these variables are only used in later analysis. 
# I include all of them here for completeness.

# helper variables to identify mother, father, child and child's gender 
mydata$mother <- as.numeric((mydata$relationship == "Self"|mydata$relationship == "Spouse") & mydata$female == 1)
mydata$father <- as.numeric((mydata$relationship == "Self"|mydata$relationship == "Spouse") & mydata$female == 0)
mydata$child <- as.numeric(mydata$relationship == "Child") 
mydata$child_female <- as.numeric(mydata$female == 1 & mydata$child == 1)

# identify child ID, mother ID and father ID
for (i in 1:nrow(mydata))
{if(mydata$child[i] & is.na(mydata$child[i]) == FALSE)
{mydata$child_ID[i] <- mydata$INDID[i]}
  else{mydata$child_ID[i] <- NA}}

for (i in 1:nrow(mydata))
{if(mydata$mother[i] & is.na(mydata$mother[i]) == FALSE)
  {mydata$mother_ID[i] <- mydata$INDID[i]}
  else{mydata$mother_ID[i] <- NA}}

for (i in 1:nrow(mydata))
{if(mydata$father[i] & is.na(mydata$father[i]) == FALSE)
  {mydata$father_ID[i] <- mydata$INDID[i]}
  else{mydata$father_ID[i] <- NA}}

# identify mother's age, father's age, and child's age 
for (i in 1:nrow(mydata))
{if(mydata$child[i] & is.na(mydata$female[i]) == FALSE)
  {mydata[i,"child_age"] <- mydata$age[i]}
  else {mydata[i, "child_age"] <- NA}}

for (i in 1:nrow(mydata))
{if(mydata$mother[i] & is.na(mydata$female[i]) == FALSE)
  {mydata[i,"mother_age"] <- mydata$age[i]}
  else {mydata[i, "mother_age"] <- NA}}

for (i in 1:nrow(mydata))
{if(mydata$father[i] & is.na(mydata$female[i]) == FALSE)
  {mydata[i,"father_age"] <- mydata$age[i]}
  else {mydata[i, "father_age"] <- NA}}

# generate helper variables to identify mother's schooling, father's schooling, and child's schooling
for (i in 1:nrow(mydata))
{if(mydata$mother[i] & is.na(mydata$female[i]) == FALSE)
  {mydata[i,"mother_schooling"] <- mydata$schooling[i]}
  else {mydata[i, "mother_schooling"] <- NA}}

for (i in 1:nrow(mydata))
{if(mydata$father[i] & is.na(mydata$female[i]) == FALSE)
  {mydata[i,"father_schooling"] <- mydata$schooling[i]}
  else {mydata[i, "father_schooling"] <- NA}}

for (i in 1:nrow(mydata))
{if(mydata$relationship[i] == "Child" & is.na(mydata$female[i]) == FALSE)
  {mydata[i,"child_schooling"] <- mydata$schooling[i]}
  else {mydata[i, "child_schooling"] <- NA}}



# In order to make my data regression-friendly, I re-format my data set by household units. 
# Each row contains the child's schooling and his/her mother and father's schooling along with all control variables.
# I group all household into three categories: one-child, two-children, household-head-living-with-parents.
# If there is one child in the household, his/her parents are matched by household code.
# If there are two children in the household, each child enters in a separate row and their parent's schooling enters twice in the two rows.
# If the household structure is household-head-living-with-parents, comprising "self" and "parent" (as specified in the "relationship" column), then "self" enters as the child and "parent" enters as the mother or father depending on their gender. 

# I use the sql package to help with data formatting
library(sqldf)

# one-child
OneChild <- sqldf ("SELECT HHID, INDID, SUM(child_schooling) AS child_schooling, SUM(mother_schooling) AS mother_schooling, SUM(father_schooling) AS father_schooling, 
                       SUM(child_age) AS child_age, SUM(mother_age) AS mother_age, SUM(father_age) AS father_age, SUM(mother_ID) as mother_ID, SUM(father_ID) as father_ID,
                       SUM(child_female) AS child_female, CITY, hukou, PROVINCE, minority FROM mydata GROUP BY HHID HAVING SUM(child) = 1") 

# two-children
# identify child1 who has the lower individual ID.
child1 <- sqldf ("SELECT HHID, MIN(INDID) AS INDID FROM mydata WHERE child == 1 GROUP BY HHID HAVING SUM(child)==2") 

# identify child2 who has the higher individual ID.
child2 <- sqldf ("SELECT HHID, MAX(INDID) AS INDID FROM mydata WHERE child == 1 GROUP BY HHID HAVING SUM(child)==2") 

# merge the two helper data frames by rows
TwoChildren <- rbind(child1,child2)

# left join child's characteristics
TwoChildren <- merge(TwoChildren, mydata[,c("INDID","child_schooling","child_female","child_age", "CITY", "hukou", "PROVINCE", "minority")], by="INDID")

# join parent's charateristics 
# Different syntax is used here as HHID is not uniquely identified in the two-children case. 
# Each parent's characteristics have to enter twice for the two children.
ParentInfo <- sqldf ("SELECT HHID, SUM(mother_schooling) AS mother_schooling, SUM(father_schooling) AS father_schooling, SUM(mother_age) AS mother_age, SUM(father_age) AS father_age, 
                     SUM(mother_ID) as mother_ID, SUM(father_ID) as father_ID FROM mydata GROUP BY HHID") 
TwoChildren <- sqldf("SELECT TwoChildren.*, ParentInfo.* FROM TwoChildren INNER JOIN ParentInfo ON TwoChildren.HHID = ParentInfo.HHID;")
TwoChildren$HHID <- NULL #remove the duplicated HHID generated from inner join



